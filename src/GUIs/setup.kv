#kivy 1.10.0
#:import split os.path.split

MainContainer:

<SectionHeading>:
    padding_y: 10.0
    Label:
        size: self.texture_size
        id: sectionLabel
        text: root.labelText
        size_hint_y: .8
        font_size: 35
        bold: True
        valign: 'middle'
        halign: 'left'
        color: (1,1,1,1)
        canvas.before:
            Color:
                rgba: .96,.15,.35,1
            Line:
                points: self.x+20, self.center_y, (self.width*2)-20, self.center_y
                width: 3.0
                cap: 'square'
            Color:
                rgba: .96,.15,.35,1
            Rectangle:
                pos: [(self.width-self.texture_size[0])/2, self.pos[1]]
                size: [self.texture_size[0]+25, self.height]
    # additional wiget placeholder just to handle the spacing issues
    Widget:

<NumberInputField>:
    multiline: False
    write_tab: False

<MainContainer>:
    padding: root.width * .02, root.height * .02
    spacing: "10dp"
    canvas.before:
        Color:
            rgba: 1,1,1,1
        Rectangle:
            pos: self.pos
            size: self.size

    orientation: 'vertical'
    ### Logo Box ------------------------
    BoxLayout:
        size_hint_y: 2
        Label:
            size_hint_x: 1.5
            text: 'Pyneal Logo'
            color: root.textColor
        Button:
            text: 'Load Settings'
            on_release: root.show_loadFileDialog(path='~/', fileFilter=['*.yaml'], loadFunc=root.loadSettings)

    ### Communication Box ------------------
    BoxLayout:
        size_hint_y: 3
        BoxLayout:
            spacing: 10
            orientation: 'vertical'
            # box label
            SectionHeading:
                labelText: 'Communication'
            # scanner port
            BoxLayout:
                padding: [20, 10]
                spacing: 20
                Label:
                    size_hint_x: 1.5
                    text_size: self.size
                    text: 'Scanner Port:'
                    color: root.textColor
                    halign: 'right'
                    valign: 'middle'
                NumberInputField:
                    id: scannerPort
                    text: str(root.GUI_settings.scannerPort)
                    on_text: root.GUI_settings.scannerPort = scannerPort.text
            # output port
            BoxLayout:
                padding: [20, 10]
                spacing: 20
                Label:
                    size_hint_x: 1.5
                    text_size: self.size
                    text: 'Output Port:'
                    color: root.textColor
                    halign: 'right'
                    valign: 'middle'
                NumberInputField:
                    id: outputPort
                    text: str(root.GUI_settings.outputPort)
                    on_text: root.GUI_settings.outputPort = outputPort.text


    ### Mask Box ------------------
    BoxLayout:
        size_hint_y: 3
        BoxLayout:
            orientation: 'vertical'
            # box label
            SectionHeading:
                # box label
                labelText: 'Mask'
            BoxLayout:
                # mask info
                Label:
                    size_hint_x: 1.5
                    id: maskFile
                    text: root.GUI_settings.maskFile
                    font_size: 16
                    color: root.textColor
                # load mask button
                Button:
                    text: 'Load Mask'
                    on_release: root.show_loadFileDialog(path='~/', fileFilter=['*.nii.gz'], loadFunc=root.loadMask)
            BoxLayout:
                CheckBox:
                    id: maskBinarizeChoice
                    size_hint_x: .25
                    state: 'down' if root.GUI_settings.maskBinarizeChoice else 'normal'
                    on_active: root.setMaskBinarizeChoice()
                Label:
                    text: 'Binarize Mask?'
                    color: root.textColor


    ### Preprocessing Box ------------------
    BoxLayout:
        size_hint_y: 2
        BoxLayout:
            orientation: 'vertical'
            # box label
            SectionHeading:
                labelText: 'Preprocessing'
            # num timepts
            BoxLayout:
                padding: [20, 10]
                spacing: 20
                Label:
                    size_hint_x: 1.5
                    text_size: self.size
                    text: '# of timepts:'
                    color: root.textColor
                    halign: 'right'
                    valign: 'middle'
                NumberInputField:
                    id: numTimepts
                    text: str(root.GUI_settings.numTimepts)
                    on_text: root.GUI_settings.numTimepts = numTimepts.text


    ### Stats Box ------------------
    BoxLayout:
        size_hint_y: 3
        BoxLayout:
            orientation: 'vertical'
            # box label
            SectionHeading:
                labelText: 'Stats'
            # buttons
            BoxLayout:
                padding: [0, 20, 0, 0]
                ToggleButton:
                    id: statsChoice_average
                    text: 'Average'
                    group: 'statsChoice'
                    state: 'down' if root.GUI_settings.statsChoice == 'Average' else 'normal'
                    on_release: root.setStatsChoice('Average')
                ToggleButton:
                    id: statsChoice_median
                    text: 'Median'
                    group: 'statsChoice'
                    state: 'down' if root.GUI_settings.statsChoice == 'Median' else 'normal'
                    on_release: root.setStatsChoice('Median')
                ToggleButton:
                    id: statsChoice_custom
                    text: 'Custom'
                    group: 'statsChoice'
                    state: 'down' if root.GUI_settings.statsChoice not in ['Average', 'Median'] else 'normal'
                    on_release: root.show_loadFileDialog(path='~/', fileFilter=['*.py'], loadFunc=root.loadCustomStats)
            Label:
                text: '' if root.GUI_settings.statsChoice in ['Average', 'Median'] else ('Custom stats: ' + split(root.GUI_settings.statsChoice)[1])
                color: root.textColor

    ### Submit Box ------------------
    BoxLayout:
        size_hint_y: 2
        BoxLayout:
            orientation: 'vertical'
            # box label
            SectionHeading:
                labelText: ''
            BoxLayout:
                padding: [150, 10]
                spacing: 10
                Button:
                    text: 'Submit'
                    on_release: root.submitGUI()


### Generic Load File Dialog Window #################################
<LoadFileDialog>:
    BoxLayout:
        font_size: '10sp'
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: root.path
            filters: root.fileFilter
            font_name: 'Roboto-Bold'

        BoxLayout:
            size_hint_y: None
            height: 50
            Button:
                text: "Load"
                on_release: root.loadFunc(filechooser.path, filechooser.selection)
            Button:
                text: "Cancel"
                on_release: root.cancelFileChooser()



### Error Notification Pop-up Window #################################
<ErrorNotification>:
    BoxLayout:
        Label:
            text_size: self.size
            valign: 'top'
            text: root.errorMsg
